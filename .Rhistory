corp <- data %>%
select(text = cuerpto) %>%
corpus()
library(tidyverse)
data <- read_csv("data/data_larazon_publico_v2.csv")
corp <- data %>%
select(text = cuerpto) %>%
corpus()
library(quanteda.textplots)
library(quanteda)
library(quanteda.textstats)
library(quanteda.textplots)
installed.packages("quanteda.textplots")
install.packages("quanteda.textplots")
library(quanteda.textplots)
library(quanteda.textstats)
library(quanteda)
corp <- data %>%
select(text = cuerpto) %>%
corpus()
corp <- data %>%
select(text = cuerpo) %>%
corpus()
corp
corp %>% kwic("después")
corp
corp
set.seed(123)
corp <- data %>%
select(text = cuerpo) %>%
sample_frac(0.2) %>%
corpus()
corp
corp[[1]]
corp
class(corpus)
class(corp)
dim(corpus)
length(corpus)
length(corp)
dim(corp)
length(corp)
toks <-  corp %>%
tokens()
toks
toks[[1]][1]
toks[[1]]
toks[[1]][3]
toks %>%
kwic( pattern = "eta",  window = 7)
comentarios_eta <- toks %>%
kwic( pattern = "eta",  window = 7)
DT::datatable(comentarios_eta, options = list(pageLength = 3))
comentarios_eta
comentarios_eta <- toks %>%
kwic( pattern = "eta",  window = 7)
comentarios_migracion <- toks %>%
kwic( pattern = "migrante|extranjer(o|a)",  window = 7)
comentarios_migracion
comentarios_migracion <- toks %>%
kwic( pattern = "migrante|extranjero",  window = 7 )
comentarios_migracion
comentarios_migracion <- toks %>%
kwic( pattern = "migrante|extranjer(o|a)",  window = 7, valuetype = "regex" )
comentarios_migracion
comentarios_migracion %>%
DT::datatable(rownames = F,
options = list(
pageLength = 3,
dom = "rtip",
headerCallback = DT::JS(
"function(thead) {",
"  $(thead).css('font-size', '0.5em');",
"}"
))
)%>%
DT::formatStyle(columns = 1:ncol(comentarios_migracion), fontSize = '40%', backgroundSize = '2%')
comentarios_migracion <- toks %>%
kwic( pattern = "violencia.*género",  window = 4, valuetype = "regex")
comentarios_migracion
comentarios_migracion <- toks %>%
kwic( pattern = "violencia|género",  window = 4, valuetype = "regex")
comentarios_migracion
comentarios_migracion <- toks %>%
kwic( pattern = "violencia|género",  window = 4, valuetype = "regex") %>% view()
ejemplo <- data.frame(text = c("Mi gato es un tirano en casa. Él es amo y señor.",
"Soy esclavo de mi gato."
))
dfm_ejemplo <- ejemplo %>%
corpus() %>%
dfm()
dfm_ejemplo
ejemplo <- data.frame(text = c("Mi gato es un tirano en casa. Él es amo y señor.",
"Soy esclavo de mi gato."
))
dfm_ejemplo <- ejemplo %>%
corpus() %>%
tokens() %>%
dfm()
dfm_ejemplo
dim(dfm_ejemplo)
dfm_ejemplo[1, ]
dim(dfm_ejemplo)
quanteda::stopwords("es")
dfm_ejemplo <- ejemplo %>%
corpus() %>%
tokens() %>%
tokens_select(pattern = quanteda::stopwords("es"),selection = "remove") %>%
dfm()
dfm_ejemplo
dfm_ejemplo <- ejemplo %>%
corpus() %>%
tokens() %>%
tokens_select(pattern = quanteda::stopwords("es"),selection = "remove") %>%
tokens_remove("[:punct:]") %>%
dfm()
dfm_ejemplo
dfm_ejemplo <- ejemplo %>%
corpus() %>%
tokens() %>%
tokens_select(pattern = quanteda::stopwords("es"), selection = "remove") %>%
tokens_remove("[[:punct:]]") %>%
dfm()
dfm_ejemplo
dfm_ejemplo <- ejemplo %>%
corpus() %>%
tokens() %>%
tokens_select(pattern = quanteda::stopwords("es"), selection = "remove") %>%
dfm()
dfm_ejemplo
dfm_ejemplo <- ejemplo %>%
corpus() %>%
tokens( remove_punct = TRUE) %>%
tokens_select(pattern = quanteda::stopwords("es"), selection = "remove") %>%
dfm()
dfm_ejemplo
dfm_ejemplo
data.frame(text = textos)
textos <-  c("Y en las noches de luna imaginaria",
"sueña con la mujer imaginaria",
"que le brindó su amor imaginario",
"vuelve a sentir ese mismo dolor",
"ese mismo placer imaginario",
"y vuelve a palpitar",
"el corazón del hombre imaginario")
data.frame(text = textos)
data.frame(text = textos) %>%
kbl()
library(kableExtra)
data.frame(text = textos) %>%
kbl()
data.frame(versos = textos) %>%
kbl()
data.frame(`El hombre imaginario` = textos) %>%
kbl()
tibble(`El hombre imaginario` = textos) %>%
kbl()
getwd()
library(quanteda)
library(quanteda.textstats)
library(quanteda.textplots)
library(tidyverse)
data <- read_csv("data/data_larazon_publico_v2.csv")
set.seed(123)
corp <- data %>%
select(text = cuerpo) %>%
sample_frac(0.2) %>%
corpus()
corp
class(corp)
length(corp)
toks <-  corp %>%
tokens()
toks
toks[[1]]
toks[[1]][3]
comentarios_eta <- toks %>%
kwic( pattern = "eta",  window = 7)
comentarios_eta %>%
DT::datatable(rownames = F,
options = list(
pageLength = 3,
dom = "rtip",
headerCallback = DT::JS(
"function(thead) {",
"  $(thead).css('font-size', '0.5em');",
"}"
))
)%>%
DT::formatStyle(columns = 1:ncol(comentarios_eta), fontSize = '40%', backgroundSize = '2%')
comentarios_migracion <- toks %>%
kwic( pattern = "migrante|extranjer(o|a)",  window = 7, valuetype = "regex" )
comentarios_migracion %>%
DT::datatable(rownames = F,
options = list(
pageLength = 3,
dom = "rtip",
headerCallback = DT::JS(
"function(thead) {",
"  $(thead).css('font-size', '0.5em');",
"}"
))
)%>%
DT::formatStyle(columns = 1:ncol(comentarios_migracion), fontSize = '40%', backgroundSize = '2%')
ejemplo <- data.frame(text = c("Mi gato es un tirano en casa. Él es amo y señor.",
"Soy esclavo de mi gato."
))
dfm_ejemplo <- ejemplo %>%
corpus() %>%
tokens() %>%
dfm()
dfm_ejemplo
dim(dfm_ejemplo)
dfm_ejemplo <- ejemplo %>%
corpus() %>%
tokens( remove_punct = TRUE) %>% # remover puntuación
tokens_select(pattern = quanteda::stopwords("es"), selection = "remove") %>% # remover stopwords
dfm()
dfm_ejemplo
library(kableExtra)
textos <-  c("Y en las noches de luna imaginaria",
"sueña con la mujer imaginaria",
"que le brindó su amor imaginario",
"vuelve a sentir ese mismo dolor",
"ese mismo placer imaginario",
"y vuelve a palpitar",
"el corazón del hombre imaginario")
tibble(`El hombre imaginario` = textos) %>%
kbl()
set.seed(123)
corpus <- data %>%
select(text = cuerpo) %>%
sample_frac(0.2) %>%
corpus()
dfm <- corpus %>%
dfm()
set.seed(123)
corpus <- data %>%
select(text = cuerpo) %>%
sample_frac(0.2) %>%
corpus()
dfm <- corpus %>%
tokens() %>%
dfm()
dim(dfm)
dim(dfm)
dim(dfm2)
set.seed(123)
tokens_data <- data %>%
select(text = cuerpo) %>%
sample_frac(0.2) %>%
corpus() %>%
tokens(remove_punct = TRUE, remove_symbols = TRUE) %>% # remover cosas
tokens_select( pattern = stopwords("es"), selection = "remove", min_nchar=3L) # remover más cosas
dfm2 <- tokens_data %>%
dfm() %>%
dfm_trim(min_termfreq = 10) # frecuencia mínima
dim(dfm2)
largo_textos <-  map_int(tokens_data, length)
df_largo <- data.frame(largo = largo_textos)
df_largo %>%
ggplot(aes(x = largo)) +
geom_histogram(binwidth = 15) +
theme_bw()
summary(df_largo$largo)
dfm2 %>%
quanteda::topfeatures(n = 10)
dfm2 %>%
quanteda::topfeatures(n = 10, decreasing = F)
violencia_genero <-  corpus[[3]]
mostrar_texto <- data.frame(texto = violencia_genero)
mostrar_texto %>%
kbl()
consine(vec1, vec2)
vec1 <- c(1, 3, 5, 9)
vec2 <- c(1, 2, 4, 8)
library(lsa)
install.packages("lsa")
library(lsa)
consine(vec1, vec2)
cosine(vec1, vec2)
vec2 <- c(1, 2, 4, 100)
library(lsa)
cosine(vec1, vec2)
vec2 <- c(90, 2, 4, 100)
library(lsa)
cosine(vec1, vec2)
vec2 <- c(90, 90, 87, 100)
cosine(vec1, vec2)
vec1 <- c(1, 3, 5, 9)
vec2 <- c(90, 90, 87, 100)
cosine(vec1, vec2)
vec1 <- c(1, 3, 5, 9)
vec2 <- c(1030, 0.1, 938, 6.9)
cosine(vec1, vec2)
vec1_random <- runif(10)
vec1_random
vec1_random <- runif(10)
vec2_random <- runif(10)
cosine(vec1_random, vec2_random)
vec1_random <- runif(100)
vec2_random <- runif(100)
cosine(vec1_random, vec2_random)
vec1_random <- runif(100)
vec2_random <- runif(100)
cosine(vec1_random, vec2_random)
vec1_random <- runif(100)
vec2_random <- runif(100)
cosine(vec1_random, vec2_random)
vec1_random <- runif(100)
vec2_random <- runif(100)
cosine(vec1_random, vec2_random)
vec1_random <- runif(100)
vec2_random <- runif(100)
cosine(vec1_random, vec2_random)
vec1_random <- runif(1000)
vec2_random <- runif(1000)
cosine(vec1_random, vec2_random)
vec1_random <- runif(1000)
vec2_random <- runif(1000)
cosine(vec1_random, vec2_random)
vec2_random <- rnorm(1000)
vec1_random <- runif(1000)
vec2_random <- rnorm(1000)
cosine(vec1_random, vec2_random)
vec1_runif <- runif(100)
vec2_rnorm <- rnorm(100)
cosine(vec1_random, vec2_rnorm)
vec1_runif <- runif(100)
vec2_rnorm <- rnorm(100)
vec1_runif <- runif(100)
vec2_rnorm <- rnorm(100)
cosine(vec1_runif, vec2_rnorm)
cosine(vec1, vec2)
vec1 <- c(1, 3, 5, 9)
vec2 <- c(1, 0.1, 938, 6.9)
library(lsa)
cosine(vec1, vec2)
vec1 <- c(1, 3, 5, 9)
vec2 <- c(1, 0.1, 4, 6.9)
library(lsa)
cosine(vec1, vec2)
set.seed(123)
vec1_runif <- runif(100)
vec2_rnorm <- rnorm(100)
cosine(vec1_runif, vec2_rnorm)
set.seed(1234)
vec1_runif <- runif(100)
vec2_rnorm <- rnorm(100)
cosine(vec1_runif, vec2_rnorm)
set.seed(1234)
vec1_runif <- runif(100)
vec2_rnorm <- rnorm(100)
cosine(vec1_runif, vec2_rnorm)
set.seed(1234)
vec1_runif <- runif(100)
vec2_rnorm <- rnorm(100)
cosine(vec1_runif, vec2_rnorm)
set.seed(1234)
vec1_runif <- runif(100)
vec2_rnorm <- rnorm(100)
cosine(vec1_runif, vec2_rnorm)
set.seed(1234)
vec1_runif <- runif(100)
vec2_rnorm <- rnorm(100)
cosine(vec1_runif, vec2_rnorm)
get_cosine <- function(vec1, vec2) {
return( sum(vec1*vec2) / sqrt(sum(vec1^2)*sum(vec2^2)) )
}
get_cosine(vec1_runif, vec2_rnorm)
library(tidyverse)
data <- read_csv("data/data_larazon_publico_v2.csv")
set.seed(123)
corp <- data %>%
select(text = cuerpo) %>%
sample_frac(0.2) %>%
corpus()
library(quanteda)
library(quanteda.textstats)
library(quanteda.textplots)
set.seed(123)
corp <- data %>%
select(text = cuerpo) %>%
sample_frac(0.2) %>%
corpus()
corp[[1]]
quanteda::stopwords("es")
quanteda::stopwords("en")
quanteda::stopwords("german")
htop
